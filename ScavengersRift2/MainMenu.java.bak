// This is a class to hold all of the Main Menu methods.
import java.util.Scanner;
import java.io.*;
public class MainMenu
{//////////////////////////////////////////////////////////////////////////////////////////////////////////// Main start
	private Scanner scan = new Scanner(System.in);/////////////////////////////////////////////////////////// System.in scanner
	private InGameMenu menu1 = new InGameMenu();///////////////////////////////////////////////////////////// Access to the in game menu

	private String menuAnswer;/////////////////////////////////////////////////////////////////////////////// Menu answer placeholder
	//private boolean done;//////////////////////////////////////////////////////////////////////////////////// For use in loops
	private String garbage = "";///////////////////////////////////////////////////////////////////////////// For use in garbage answers

	private int newGame1Count = 0;/////////////////////////////////////////////////////////////////////////// New game player 1 check
	private int newGame2Count = 0;/////////////////////////////////////////////////////////////////////////// New game player 2 check
	private int newGame3Count = 0;/////////////////////////////////////////////////////////////////////////// New game player 3 check
	private String mainMenuDisplay;////////////////////////////////////////////////////////////////////////// The combined String of the main menu items
	private String mainHeader;/////////////////////////////////////////////////////////////////////////////// The main menu header
	private String mainOptions;////////////////////////////////////////////////////////////////////////////// The main menu selection
	private String mainPrompt;/////////////////////////////////////////////////////////////////////////////// The main menu prompt
	private String playerMenu;/////////////////////////////////////////////////////////////////////////////// placeholder player menu name
	private String playerMenu1;////////////////////////////////////////////////////////////////////////////// Player One menu Name 
	private String playerMenu2;////////////////////////////////////////////////////////////////////////////// Player Two menu Name
	private String playerMenu3;////////////////////////////////////////////////////////////////////////////// Player Three menu Name
	private String player;/////////////////////////////////////////////////////////////////////////////////// Placeholder player name





	public MainMenu() throws IOException///////////////////////////////////////////////////////////////////// Main menu defualt if no save files
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		Save save = new Save();////////////////////////////////////////////////////////////////////// Access to player files
		mainHeader = //////////////////////////////////////////////////////////////////////////////////////// Main header
		"\n\n      ____________________________________________________________________      " + 
			"     |                                                                    |     " + 
			"     |                        ____________________                        |     " +
			"     |     __________________|\\__________________/|__________________     |     " +
			"     |    |------------------||                  ||------------------|    |     " +
			"     |    |------------------|| SCAVENGER'S RIFT ||------------------|    |     " +
			"     |    \\------------------\\|__________________|/------------------/    |     " +
			"     |                                                                    |     " +
			"     \\____________________________________________________________________/     \n\n\n";

		mainOptions = /////////////////////////////////////////////////////////////////////////////////////// Main options
			"                ________________________________________________                " +
			"               |                  ____________                  |               " +
			"               |                 |  New Game  |                 |               " +
			"               |                 |____________|                 |               " +
			"               |                  ____________                  |               " +
			"               |                 | Quit  Game |                 |               " +
			"               |                 |____________|                 |               " +
			"               |________________________________________________|               \n\n";

		mainPrompt = "What would you like to do? ";////////////////////////////////////////////////////////// Main prompt
		playerMenu1 = "  Player 1  ";//////////////////////////////////////////////////////////////////////// Player One name default
		playerMenu2 = "  Player 2  ";//////////////////////////////////////////////////////////////////////// Player Two name default
		playerMenu3 = "  Player 3  ";//////////////////////////////////////////////////////////////////////// Player Three name default
		playerMenu = "   Player   ";///////////////////////////////////////////////////////////////////////// PlayerMenu default
		save.setPlayer1Name("Player 1");///////////////////////////////////////////////////////////////////// Player One menu name default
		save.setPlayer2Name("Player 2");///////////////////////////////////////////////////////////////////// Player Two menu name default
		save.setPlayer3Name("Player 3");///////////////////////////////////////////////////////////////////// Player Three menu name default
		player = "Player";/////////////////////////////////////////////////////////////////////////////////// Player name default
		mainMenuDisplay = mainHeader + mainOptions + mainPrompt;///////////////////////////////////////////// Combined main menu/ title screen
		done = false;////////////////////////////////////////////////////////////////////////////////////////
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// Default constructor end.





	public void changeMainOptions_New()////////////////////////////////////////////////////////////////////// This method changes the mainOptions
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		mainOptions = /////////////////////////////////////////////////////////////////////////////////////// 
			"                ________________________________________________                " +
			"               |                  ____________                  |               " +
			"               |                 |  New Game  |                 |               " +
			"               |                 |____________|                 |               " +
			"               |                  ____________                  |               " +
			"               |                 | Quit  Game |                 |               " +
			"               |                 |____________|                 |               " +
			"               |________________________________________________|               \n\n";

		mainPrompt = "What would you like to do? ";////////////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// changeMainOptions_New() End.





	public void changeMainOptions_Continue()///////////////////////////////////////////////////////////////// This method changes the mainOptions
	{////////////////////////////////////////////////////////////////////////////////////////////////////////
		mainOptions = /////////////////////////////////////////////////////////////////////////////////////// 
			"                ________________________________________________                " +
			"               |        ____________        ____________        |               " +
			"               |       |  New Game  |      |  Continue  |       |               " +
			"               |       |____________|      |____________|       |               " +
			"               |                  ____________                  |               " +
			"               |                 | Quit  Game |                 |               " +
			"               |                 |____________|                 |               " +
			"               |________________________________________________|               \n\n";

		mainPrompt = "What would you like to do? ";////////////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// changeMainOptions_Continue() end.





	public void changeMainOptions_OverwriteFile()//////////////////////////////////////////////////////////// This method changes the mainOptions
	{////////////////////////////////////////////////////////////////////////////////////////////////////////
		mainOptions = /////////////////////////////////////////////////////////////////////////////////////// 
			"                ________________________________________________                " +
			"               |        ____________        ____________        |               " +
			"               |     1.|"+playerMenu1+ "|    2.|"+playerMenu2+ "|       |               " +
			"               |       |____________|      |____________|       |               " +
			"               |        ____________        ____________        |               " +
			"               |     3.|"+playerMenu3+ "|    4.|    Back    |       |               " +
			"               |       |____________|      |____________|       |               " +
			"               |________________________________________________|               \n\n";

		mainPrompt = "Which file do you want to overwrite? ";//////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// changeMainOptions_Overwrite() End.





	public void changeMainOptions_LoadFile()///////////////////////////////////////////////////////////////// This method changes the mainOptions
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		mainOptions = /////////////////////////////////////////////////////////////////////////////////////// 
			"                ________________________________________________                " +
			"               |        ____________        ____________        |               " +
			"               |     1.|"+playerMenu1+ "|    2.|"+playerMenu2+ "|       |               " +
			"               |       |____________|      |____________|       |               " +
			"               |        ____________        ____________        |               " +
			"               |     3.|"+playerMenu3+ "|    4.|    Back    |       |               " +
			"               |       |____________|      |____________|       |               " +
			"               |________________________________________________|               \n\n";

		mainPrompt = "Which file do you want to play? ";///////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// changeMainOptions_New() End.





	public void promptGoodbye()///////////////////////////////////////////////////////////////////////////// This method exits the program and says goodbye
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		System.out.println("\n\n\n\n\n\n\n\n" +
			"                ________________________________________________                " +
			"               |                                                |               " +
			"               |           __________________________           |               " +
			"               |          | Rory: Thanks for Playing |          |               " +
			"               |          | Rory: Goodbye for Now!   |          |               " +
			"               |          |__________________________|          |               " +
			"               |                                                |               " +
			"               |________________________________________________|               \n\n\n\n\n\n\n");

		System.exit(0);////////////////////////////////////////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// promptGoodbye() End.





	public String getMainMenuDisplay()/////////////////////////////////////////////////////////////////////// This method outputs the main menu string
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		mainMenuDisplay = mainHeader + mainOptions + mainPrompt;///////////////////////////////////////////// 
		return mainMenuDisplay;////////////////////////////////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// getMainMenuDisplay() End.





	public String printMainMenu()//////////////////////////////////////////////////////////////////////////// This method displays the full main menu
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// It also prompts the user for an answer
		GeneralMethods gm = new GeneralMethods();//////////////////////////////////////////////////////////// Access to the general methods
		String displayMain = getMainMenuDisplay();/////////////////////////////////////////////////////////// 
		System.out.print(displayMain);/////////////////////////////////////////////////////////////////////// 
		menuAnswer = gm.promptUser();//////////////////////////////////////////////////////////////////////// 
		return menuAnswer;/////////////////////////////////////////////////////////////////////////////////// 
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// printMainMenu() End.





	public void setPlayerName()////////////////////////////////////////////////////////////////////////////// This method changes the player name
	{////////////////////////////////////////////////////////////////////////////////////////////////////////
		GeneralMethods gm = new GeneralMethods();//////////////////////////////////////////////////////////// Access to the general methods
		String playerName;
		do
		{
			System.out.print("\nPlease enter your character name: ");
			playerName = scan.next();
			if (playerName.length() <= 10 && playerName.length() >= 3)/////////////////////////////////////// 
				done = true;
			while (done != true)
			{
				System.out.println("The player name needs to be between 3 and 10 characters long");
				System.out.print("Please enter your character name: ");
				playerName = scan.next();
				if (playerName.length() <= 10 && playerName.length() >= 3)
					done = true;
			}
			done = false;
			System.out.print("\nAre you sure you want " + playerName + " to be your name? ");
			menuAnswer = gm.promptUser();
			if (menuAnswer.equals("Y"))
			{
				done = true;
			}
		}
		while (done != true);
		done = false;
		player = playerName;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// setPlayerName() End.





	public void setPlayerNameMenu()////////////////////////////////////////////////////////////////////////// This method sets the player menu name
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		String playerName = player;
		if (playerName.length() == 10)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = " " + playerName + " ";
		}
		else if (playerName.length() == 9)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "  " + playerName + " ";
		}
		else if (playerName.length() == 8)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "  " + playerName + "  ";
		}
		else if (playerName.length() == 7)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "   " + playerName + "  ";
		}
		else if (playerName.length() == 6)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "   " + playerName + "   ";
		}
		else if (playerName.length() == 5)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "    " + playerName + "   ";
		}
		else if (playerName.length() == 4)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "    " + playerName + "    ";
		}
		else if (playerName.length() == 3)
		{
			System.out.println("\nYour Character name is " + playerName + "!\n");
			playerName = "     " + playerName + "    ";
		}
		playerMenu = playerName;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// setPlayerNameMenu() End.





	public void mainMenu_New() throws IOException//////////////////////////////////////////////////////////// This method is the main menu without saves
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		GeneralMethods gm = new GeneralMethods();//////////////////////////////////////////////////////////// Access to the general methods
		Save save = new Save();////////////////////////////////////////////////////////////////////////////// Access to player files
		do/////////////////////////////////////////////////////////////////////////////////////////////////// Main menu Do while loop
		{		
			done = false;//////////////////////////////////////////////////////////////////////////////////// To reset the done value
			changeMainOptions_New();///////////////////////////////////////////////////////////////////////// Changes the main menu to new game format
			String mainMenuAnswer = printMainMenu();///////////////////////////////////////////////////////// Prints the main menu + user answer
			switch (mainMenuAnswer)////////////////////////////////////////////////////////////////////////// Main menu options
			{
			case "1"://////////////////////////////////////////////////////////////////////////////////////// New game from main menu
			case "N":////////////////////////////////////////////////////////////////////////////////////////
				mainMenu_OverwriteFile();//////////////////////////////////////////////////////////////////// Goes to overwrite files selection
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "1": new game


			case "2"://////////////////////////////////////////////////////////////////////////////////////// Quit game from main menu
			case "Q"://////////////////////////////////////////////////////////////////////////////////////// 
				System.out.print("Are you sure you want to quit? Yes or No? ");////////////////////////////// Are you sure prompt
				menuAnswer = gm.promptUser();////////////////////////////////////////////////////////////////
				if (menuAnswer.equals("Y"))////////////////////////////////////////////////////////////////// If yes quit.
				{
					promptGoodbye();///////////////////////////////////////////////////////////////////////// Exits the menu with a goodbye message
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "2": quit


			default:///////////////////////////////////////////////////////////////////////////////////////// If main menu option isn't valid, it reloops.
				break;
			}
		}
		while (done != true);//////////////////////////////////////////////////////////////////////////////// End of main menu loop
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// mainMenu_New() End.





	public void mainMenu_Continue() throws IOException/////////////////////////////////////////////////////// This method is the main menu with saves
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		GeneralMethods gm = new GeneralMethods();//////////////////////////////////////////////////////////// Access to the general methods
		do/////////////////////////////////////////////////////////////////////////////////////////////////// Main menu do while loop
		{		
			done = false;//////////////////////////////////////////////////////////////////////////////////// To reset the done value
			changeMainOptions_Continue();//////////////////////////////////////////////////////////////////// Changes the display to continue main menu
			String mainMenuAnswer = printMainMenu();///////////////////////////////////////////////////////// Prints the main menu + user answer
			switch (mainMenuAnswer)////////////////////////////////////////////////////////////////////////// Main menu options
			{
			case "1"://////////////////////////////////////////////////////////////////////////////////////// New game from main menu
			case "N":////////////////////////////////////////////////////////////////////////////////////////
				System.out.print("\nStart a new game? ");////////////////////////////////////////////////////
				menuAnswer = gm.promptUser();////////////////////////////////////////////////////////////////
				if (menuAnswer.equals("Y"))////////////////////////////////////////////////////////////////// If yes change screens.
				{
					mainMenu_OverwriteFile();//////////////////////////////////////////////////////////////// Goes to overwrite files selection
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "1": new game


			case "2"://////////////////////////////////////////////////////////////////////////////////////// New game from main menu
			case "C":////////////////////////////////////////////////////////////////////////////////////////
				mainMenu_LoadFile();///////////////////////////////////////////////////////////////////////// Goes to continue game selection
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "2": new game


			case "3"://////////////////////////////////////////////////////////////////////////////////////// Quit game from main menu
			case "Q"://////////////////////////////////////////////////////////////////////////////////////// 
				System.out.print("Are you sure you want to quit? Yes or No? ");////////////////////////////// Are you sure prompt
				menuAnswer = gm.promptUser();////////////////////////////////////////////////////////////////
				if (menuAnswer.equals("Y"))////////////////////////////////////////////////////////////////// If yes quit.
				{
					promptGoodbye();///////////////////////////////////////////////////////////////////////// Exits the menu with a goodbye message
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "3": quit


			default:///////////////////////////////////////////////////////////////////////////////////////// If main menu option isn't valid, it reloops.
				break;
			}
		}
		while (done != true);//////////////////////////////////////////////////////////////////////////////// End of Main Menu loop
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// mainMenu_Continue() End.





	public void mainMenu_OverwriteFile() throws IOException////////////////////////////////////////////////// This method is the overwrite file menu
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		GeneralMethods gm = new GeneralMethods();//////////////////////////////////////////////////////////// Access to the general methods
		Save save = new Save();////////////////////////////////////////////////////////////////////////////// Access to player files
		do/////////////////////////////////////////////////////////////////////////////////////////////////// Main menu do while loop
		{
			done = false;//////////////////////////////////////////////////////////////////////////////////// To reset the done value
			changeMainOptions_OverwriteFile();/////////////////////////////////////////////////////////////// Changes the menuOptions to new file display
			String mainMenuAnswer = printMainMenu();///////////////////////////////////////////////////////// Prints the main menu + user answer
			switch (mainMenuAnswer)////////////////////////////////////////////////////////////////////////// Main menu options
			{
			case "1"://////////////////////////////////////////////////////////////////////////////////////// case "1": Player 1 rewrite data
				if (newGame1Count == 0)
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer1Name(player);///////////////////////////////////////////////////////////// Sets the player1 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player menu name
					playerMenu1 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player1 menu name
					newGame1Count = 1;/////////////////////////////////////////////////////////////////////// 
					//save.savePlayer1();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				System.out.print("\nThis will permanently delete the file. "
					+ "\nDo you really want to overwrite " + save.getPlayer1Name() + "? ");
				menuAnswer = gm.promptUser();
				if (menuAnswer.equals("Y"))
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer1Name(player);;//////////////////////////////////////////////////////////// Sets the player1 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player menu name
					playerMenu1 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player1 menu name
					//save.savePlayer1();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "1": File1/player1


			case "2"://////////////////////////////////////////////////////////////////////////////////////// case "2": Player 2 rewrite data
				if (newGame2Count == 0)
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer2Name(player);;//////////////////////////////////////////////////////////// Sets the player2 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player Menu name
					playerMenu2 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player2 menu name
					newGame2Count = 1;///////////////////////////////////////////////////////////////////////
					//save.savePlayer2();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				System.out.print("Do you really want to overwrite " + save.getPlayer2Name() + "? ");
				menuAnswer = gm.promptUser();
				if (menuAnswer.equals("Y"))
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer2Name(player);///////////////////////////////////////////////////////////// Sets the player2 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player Menu name
					playerMenu2 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player2 menu name
					//save.savePlayer2();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "2": File2/player2


			case "3"://////////////////////////////////////////////////////////////////////////////////////// case "3": Player 3 rewrite data
				if (newGame3Count == 0)
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer3Name(player);///////////////////////////////////////////////////////////// Sets the player3 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player Menu name
					playerMenu3 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player3 menu name
					newGame3Count = 1;///////////////////////////////////////////////////////////////////////
					//save.savePlayer3();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				System.out.print("Do you really want to overwrite " + save.getPlayer3Name() + "? ");
				menuAnswer = gm.promptUser();
				if (menuAnswer.equals("Y"))
				{
					setPlayerName();///////////////////////////////////////////////////////////////////////// Sets the player name
					save.setPlayer3Name(player);///////////////////////////////////////////////////////////// Sets the player3 name
					setPlayerNameMenu();///////////////////////////////////////////////////////////////////// Sets the player Menu name
					playerMenu3 = playerMenu;//////////////////////////////////////////////////////////////// Sets the player3 menu name
					//save.savePlayer3();////////////////////////////////////////////////////////////////////
					mainMenu_LoadFile();///////////////////////////////////////////////////////////////////// Goes to continue game selection
				}
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "3": File3/player3


			case "4"://////////////////////////////////////////////////////////////////////////////////////// case "4": Back to main menu
			case "B"://////////////////////////////////////////////////////////////////////////////////////// 
				if (newGame1Count == 1 || newGame2Count == 1 || newGame3Count == 1)
					mainMenu_Continue();
				mainMenu_New();////////////////////////////////////////////////////////////////////////////// Goes back to main menu
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "4": Back 


			default:///////////////////////////////////////////////////////////////////////////////////////// If main menu option isn't valid, it reloops.
				break;/////////////////////////////////////////////////////////////////////////////////////// Reloop default End.

			}//////////////////////////////////////////////////////////////////////////////////////////////// End of Case Switch
		}//////////////////////////////////////////////////////////////////////////////////////////////////// 
		while (done != true);//////////////////////////////////////////////////////////////////////////////// End of Main Menu loop
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// mainMenu_Overwrite() End.





	public void mainMenu_LoadFile() throws IOException/////////////////////////////////////////////////////// This method is the no save files menu
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// 
		StoryLines story = new StoryLines();///////////////////////////////////////////////////////////////// Access to the story events
		TheColony theColony = new TheColony();/////////////////////////////////////////////////////////////// Access to the colony
		Save save = new Save();////////////////////////////////////////////////////////////////////////////// Access to player files
		int storyEvent;
		player = save.getPlayerName();
		do/////////////////////////////////////////////////////////////////////////////////////////////////// Main menu do while loop
		{
			done = false;//////////////////////////////////////////////////////////////////////////////////// To reset the done value
			changeMainOptions_LoadFile();//////////////////////////////////////////////////////////////////// Changes the display to continue game
			menuAnswer = printMainMenu();//////////////////////////////////////////////////////////////////// Prints the main menu + user answer
			switch (menuAnswer)////////////////////////////////////////////////////////////////////////////// Main menu options
			{
			case "1"://////////////////////////////////////////////////////////////////////////////////////// New game from main menu
				player = save.getPlayer1Name();
				save.setPlayerName(player);
				storyEvent = save.getStoryEvent();
				if (storyEvent == 0)
				{
					story.storyLineEvent_StartNewGame();
				}
				theColony.setTestNum(5);
				theColony.goTo_TheColony();
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "1": New game


			case "2"://////////////////////////////////////////////////////////////////////////////////////// Continue game from main menu
				player = save.getPlayer2Name();
				save.setPlayerName(player);
				storyEvent = save.getStoryEvent();
				if (storyEvent == 0)
				{
					story.storyLineEvent_StartNewGame();
				}
				theColony.setTestNum(10);
				theColony.goTo_TheColony();
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "2" Continue game


			case "3"://////////////////////////////////////////////////////////////////////////////////////// Quit game from main menu
				player = save.getPlayer3Name();
				save.setPlayerName(player);
				storyEvent = save.getStoryEvent();
				if (storyEvent == 0)
				{
					story.storyLineEvent_StartNewGame();
				}
				theColony.setTestNum(15);
				theColony.goTo_TheColony();
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "3": Quit

			
			case "4"://////////////////////////////////////////////////////////////////////////////////////// case "4": Back to main menu
			case "B"://////////////////////////////////////////////////////////////////////////////////////// 
				mainMenu_Continue();///////////////////////////////////////////////////////////////////////// Goes back to main menu
				break;/////////////////////////////////////////////////////////////////////////////////////// End of case "4": Back 


			default:///////////////////////////////////////////////////////////////////////////////////////// If main menu option isn't valid, it reloops.
				break;
			}
		}
		while (done != true);//////////////////////////////////////////////////////////////////////////////// End of main menu loop
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// mainMenu_New() End.





	public void checkClass()///////////////////////////////////////////////////////////////////////////////// This method is a tester
	{////////////////////////////////////////////////////////////////////////////////////////////////////////
		System.out.println("This class works fine");/////////////////////////////////////////////////////////
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// checkClass() End.





}//////////////////////////////////////////////////////////////////////////////////////////////////////////// End of MainMenu Class