///////////////////////////////////////////////////////////////////////////////////////////////////////////// Zephan Johnson
///////////////////////////////////////////////////////////////////////////////////////////////////////////// 9/22/2013
///////////////////////////////////////////////////////////////////////////////////////////////////////////// "Scavenger's Rift"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////// "This class is the save file object"
import java.io.*;
public class Save implements Serializable//////////////////////////////////////////////////////////////////// Start of Save Class
{
	private String playerName;/////////////////////////////////////////////////////////////////////////////// Player name
	private int tubewood;//////////////////////////////////////////////////////////////////////////////////// Tubewood resource count
	private boolean worldEvent;////////////////////////////////////////////////////////////////////////////// World event boolean
	private int playerNumber;//////////////////////////////////////////////////////////////////////////////// Player ID

	public String getPlayerName()//////////////////////////////////////////////////////////////////////////// Get Player Name
	{return playerName;}///////////////////////////////////////////////////////////////////////////////////// "Gets the player name"

	public void setPlayerName(String name)/////////////////////////////////////////////////////////////////// Set Player Name
	{playerName = name;}///////////////////////////////////////////////////////////////////////////////////// "Sets the Player name"

	public int getPlayerNumber()///////////////////////////////////////////////////////////////////////////// Get Player ID
	{return playerNumber;}/////////////////////////////////////////////////////////////////////////////////// "Gets the Player ID"

	public void setPlayerNumber(int number)////////////////////////////////////////////////////////////////// Set Player ID
	{playerNumber = number;}///////////////////////////////////////////////////////////////////////////////// "Sets the player ID"

	public int getResource(String resource)////////////////////////////////////////////////////////////////// Get resource Method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Gets the resource# for appropriate resource"
		if (resource.equals("tubewood"))///////////////////////////////////////////////////////////////////// Get Tubewood count
			return tubewood;
		else
			return -1;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of get Resource method

	public void setResource(String resource, int amount)///////////////////////////////////////////////////// Set resource Method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Saves the resource# for appropriate resource"
		if (resource.equals("tubewood"))///////////////////////////////////////////////////////////////////// Set Tubewood
			tubewood = amount;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of set Resource method

	public boolean getEvent(String event)//////////////////////////////////////////////////////////////////// Get Event boolean method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "gets the boolean for appropriate events"
		if (event.equals("worldEvent"))////////////////////////////////////////////////////////////////////// get worldEvent 
			return worldEvent;
		else
			return false;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of get Event method

	public void setEvent(String event, boolean done)///////////////////////////////////////////////////////// Set Event Method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Sets the boolean for appropriate events"
		if (event.equals("worldEvent"))////////////////////////////////////////////////////////////////////// Set worldevent
			worldEvent = done;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of set Event method

	public String toString()///////////////////////////////////////////////////////////////////////////////// Start of toString Method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Lists the save file attributes"
		return "The player name is: " + playerName
			+ "\nThe player number is: " + playerNumber
			+ "\nAmount of Tubewood collected is: " + tubewood
			+ "\nCompleted worldEvent: " + worldEvent;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of toString method

	public void saveFile(Save save, int player)////////////////////////////////////////////////////////////// Start of save file method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Saves the appropriate files"
		FileOutputStream fos = null;
		ObjectOutputStream oos = null;
		try
		{
			if (player == 1)
				fos = new FileOutputStream("Save1.ser", false);
			else if (player == 2)
				fos = new FileOutputStream("Save2.ser", false);
			else if (player == 3)
				fos = new FileOutputStream("Save3.ser", false);
			oos = new ObjectOutputStream(fos);
			oos.writeObject(save);
			oos.close();
		}
		catch (IOException ioe)
		{
			System.out.println(ioe.getMessage());
			ioe.printStackTrace();
		}
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of saveFile method

	public Save readFile(int player)///////////////////////////////////////////////////////////////////////// Start of read file method
	{//////////////////////////////////////////////////////////////////////////////////////////////////////// "Reads the appropriate files"
		FileInputStream fis = null;
		ObjectInputStream ois = null;
		Save save = null;
		try
		{
			if (player == 1)
				fis = new FileInputStream("Save1.ser");
			else if (player == 2)
				fis = new FileInputStream("Save2.ser");
			else if (player == 3)
				fis = new FileInputStream("Save3.ser");
			ois = new ObjectInputStream(fis);
			save = (Save)ois.readObject();
			ois.close();
		}
		catch (IOException ioe)
		{
			System.out.println(ioe.getMessage());
			ioe.printStackTrace();
		}
		catch (ClassNotFoundException cnfe)
		{
			System.out.println(cnfe.getMessage());
		}
		return save;
	}//////////////////////////////////////////////////////////////////////////////////////////////////////// End of readFile method
}//////////////////////////////////////////////////////////////////////////////////////////////////////////// End of Save Class